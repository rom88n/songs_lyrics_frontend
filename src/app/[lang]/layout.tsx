import type { Metadata } from 'next';
import { roboto } from '@/config/theme/fonts';
import ThemeRegistry from '@/components/layouts/ThemeRegistry';
import TopNavigation from '@/components/common/TopNavigation';
import { ReactNode } from 'react';
import Container from '@mui/material/Container';
import * as React from 'react';
import Box from '@mui/material/Box';
import Footer from '@/components/common/Footer';
import LangProvider from '@/components/layouts/LangProvider';
import { locales, TLocale } from '@/middleware';
import { getDictionary } from '@/app/[lang]/dictionaries';
import { ApolloClient } from '@/config/apollo';

type TRootLayout = {
  children: ReactNode;
  params: { lang: TLocale }
}

export async function generateStaticParams() {
  return locales.map(lang => {
    lang;
  });
}

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
                                           children,
                                           params: { lang },
                                         }: TRootLayout) {
  const labels = await getDictionary(lang);

  return (
    <html lang={lang}>
    <Box
      component="body"
      className={roboto.className}
      sx={{
        fontSize: '1.2rem',
        lineHeight: '1.7rem',
        overflowY: 'scroll',
        display: 'flex',
        flexDirection: 'column',
        minHeight: '100vh',
      }}
    >
      <ApolloClient>
        <LangProvider lang={lang} labels={labels}>
          <ThemeRegistry>
            <TopNavigation/>
            <Container
              component="main"
              maxWidth="lg"
              sx={{
                marginTop: '8rem',
                marginBottom: '2rem',
                flex: 1,
              }}
            >
              {children}
            </Container>
            <Footer/>
          </ThemeRegistry>
        </LangProvider>
      </ApolloClient>
    </Box>
    </html>
  );
}
